@model StudentInterestSystem.Models.DashboardViewModel // Assuming the model is a list of strings representing interests


<head>
    <!-- Include Chart.js library -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .parenttable {
            border-collapse: collapse;
            height:100%;
            width:100%;
            margin:20px;

        }

        .icard {
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
            transition: 0.3s;
            width: 200px;
            height:200px;
            font-size:124px;
            margin-left: 10%;
        }

            .card:hover {
                box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
            }

        .icontainer {
            padding: 2px 0px;
            position: center;
            justify-content: center;
            align-items: center;
            margin-top:100px;
        }

        .std {
            border: 1px solid black;
            margin-left: 30px;
            margin-bottom: 30px;
        }

        .login-form {
            width: 300px;
            margin-left: 35%;
        }

        .flip-card {
            background-color: transparent;
            width: 90px;
            height: 50px;
            perspective: 1000px;
        }

        .flip-card-inner {
            position: relative;
            width: 100%;
            height: 100%;
            text-align: center;
            transition: transform 0.6s;
            transform-style: preserve-3d;
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
            margin-top: 20%;
            margin-left: 20px;
        }

        .flip-card:hover .flip-card-inner {
            transform: rotateY(180deg);
        }

        .flip-card-front, .flip-card-back {
            position: absolute;
            width: 100%;
            height: 100%;
            -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
        }

        .flip-card-front {
            background-color: lightgrey;
            color: white;
        }

        .flip-card-back {
            background-color: white;
            color: black;
            transform: rotateY(180deg);
        }

        .interests-wrapper {
            display: flex; /* Use flexbox to display items horizontally */
        }

        .interests-container {
            margin-right: 20px; /* Optional: Adjust margin between containers */
            flex: 1; /* Distribute available space equally among containers */
        }
        .stattable
        {
            margin-left:150px;
            height:300px;
            width:300px;
        }

    </style>

</head>


<h3 >Dashboard</h3>

<table class="parenttable table" style="margin-left:0%">
    <tr>
        <td>
            <div class="interests-wrapper">
                <div class="interests-container">
                    <h4 class="text-center">Top 5 <br>Interests</h4>
                    <br />
                    @foreach (var interest in Model.Top5Interests)
                    {
                        <div class="flip-card">
                            <div class="flip-card-inner">
                                <div class="flip-card-front" style="background-color:forestgreen">
                                    <h6 style="margin-top:8px">@interest.label</h6>
                                </div>
                                <div class="flip-card-back">
                                    <h6 style="margin-top:8px">@interest.StudentCount</h6>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <div class="interests-container">
                    <h4 class="text-center">Bottom 5 Interests</h4>
                    <br />
                    @foreach (var interest in Model.Bottom5Interests)
                    {
                        <div class="flip-card">
                            <div class="flip-card-inner">
                                <div class="flip-card-front" style="background-color:red">
                                    <h6 style="margin-top:8px">@interest.label</h6>
                                </div>
                                <div class="flip-card-back">
                                    <h6 style="margin-top:8px">@interest.StudentCount</h6>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </td>


        <td>
            <h1>    Distinct Interest</h1>

                <div class="icard">
                    <div class="icontainer">
                    <h1 style="font-size:120px;margin:15%">@Model.DistinctInterests</h1>
                    </div>
                </div>
            
        </td>
        
        <td>
            <div style="width: 400px; height: 400px;">
                <canvas id="provinceChart"></canvas>
            </div>

            <script>
                var provinceData = [];
                var provinceLabels = [];

                @foreach (var provinceCount in Model.provinceCount)
                {
                    <text>
                        provinceLabels.push('@provinceCount.label');
                    provinceData.push('@provinceCount.StudentCount');
                    </text>
                }

                                    var ctx = document.getElementById('provinceChart').getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: provinceLabels,
                        datasets: [{
                            label: 'Provincial Distribution',
                            data: provinceData,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.7)',
                                'rgba(54, 162, 235, 0.7)',
                                'rgba(255, 206, 86, 0.7)',
                                'rgba(75, 192, 192, 0.7)',
                                'rgba(153, 102, 255, 0.7)',
                                'rgba(255, 159, 64, 0.7)',
                                // Add more colors if needed
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true
                    }
                });
            </script>
            
        </td>

        <td>


            <canvas id="studentChart" width="500" height="400"></canvas>
                <script>
                var labels = [];
                var counts = [];

                @foreach (var Count in Model.submissionCount)
                {

                    <text>
                        labels.push('@Count.label');
                        counts.push('@Count.StudentCount');
                    </text>
                }
                    var ctx = document.getElementById('studentChart').getContext('2d');
                    var myChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Number of Students Created',
                                data: counts,
                                fill: false,
                                borderColor: 'rgba(75, 192, 192, 1)',
                                borderWidth: 2
                            }]
                        },
                        options: {
                            scales: {
                                x: {
                                    display: true,
                                    title: {
                                        display: true,
                                        text: 'Date'
                                    }
                                },
                                y: {
                                    display: true,
                                    title: {
                                        display: true,
                                        text: 'Number of Students'
                                    },
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                </script>

        </td>
    </tr>
    <tr>
        <td>
            <canvas id="ageChart" width="400" height="200"></canvas>

            <script>
                // Get the ages passed from the server-side
                var studentAges = @Html.Raw(Json.Serialize(Model.StudentAges)); 

                // Using Chart.js to create a bar chart
                var ctx = document.getElementById('ageChart').getContext('2d');
                var ageChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: Array.from({ length: studentAges.length/5 }, (_, i) => `${i + 10}`), // Labels for each student
                        datasets: [{
                            label: 'Age Distribution',
                            data: studentAges, // Student ages data
                            backgroundColor: 'rgba(54, 162, 235, 0.5)', // Bar color
                            borderColor: 'rgba(54, 162, 235, 1)', // Border color
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            </script>
            
        </td>

        <td>

            <div style="width: 300px; height: 300px;">
                <canvas id="departmentChart"></canvas>
            </div>

            <script>
                    var departmentData = [];
                    var departmentLabels = [];

                    @foreach (var departmentCount in Model.departmentCount)
                    {
                        <text>
                            departmentLabels.push('@departmentCount.label');
                        departmentData.push('@departmentCount.StudentCount');
                        </text>
                    }

                    var ctx = document.getElementById('departmentChart').getContext('2d');
                    var myChart = new Chart(ctx, {
                        type: 'pie',
                        data: {
                            labels: departmentLabels,
                            datasets: [{
                                label: 'Department Distribution',
                                data: departmentData,
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.7)',
                                    'rgba(54, 162, 235, 0.7)',
                                    'rgba(255, 206, 86, 0.7)',
                                    'rgba(75, 192, 192, 0.7)',
                                    'rgba(153, 102, 255, 0.7)',
                                    'rgba(255, 159, 64, 0.7)',
                                    // Add more colors if needed
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true
                        }
                    });
                </script>
        </td>

        <td>
            <canvas id="degreeChart" width="400" height="200"></canvas>

            <script>
                var degreeData = [];
                var degreeLabels = [];

                @foreach (var departmentCount in Model.degreeCount)
                {
                    <text>
                        degreeLabels.push('@departmentCount.label');
                    degreeData.push('@departmentCount.StudentCount');
                    </text>
                }

                // Using Chart.js to create a pie chart
                var ctx = document.getElementById('degreeChart').getContext('2d');
                var degreeChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: degreeLabels,
                        datasets: [{
                            label: 'Degree Distribution',
                            data: degreeData,
                            backgroundColor: [
                                'rgba(78, 115, 223, 0.7)',
                                'rgba(100, 200, 150, 0.7)',
                                'rgba(255, 159, 64, 0.7)',
                                'rgba(54, 162, 235, 0.7)',
                                'rgba(153, 102, 255, 0.7)',
                                'rgba(255, 99, 132, 0.7)',
                                'rgba(255, 205, 86, 0.7)',
                                'rgba(75, 192, 192, 0.7)',
                                'rgba(231, 233, 237, 0.7)',
                                'rgba(220, 120, 120, 0.7)',
                                // Feel free to adjust the colors or add more as needed
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        // Add additional options as needed
                    }
                });
            </script>

        </td>

        <td>
            <table class="stattable table" >
                <thead>
                    <tr>
                        <th>Status</th>
                        <th>Count</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Studying</td>
                        <td>@Model.studentStats.Studying</td>
                    </tr>
                    <tr>
                        <td>Recently Enrolled</td>
                        <td>@Model.studentStats.RecentlyEnrolled</td>
                    </tr>
                    <tr>
                        <td>About to Graduate</td>
                        <td>@Model.studentStats.AboutToGraduate</td>
                    </tr>
                    <tr>
                        <td>Graduated</td>
                        <td>@Model.studentStats.Graduated</td>
                    </tr>
                </tbody>
            </table>
        </td>
    </tr>

    <tr>
        <td>
            <canvas id="genderChart" width="400" height="200"></canvas>
            <script>
                var genderData = [];
                var genderLabels=[];
                @foreach (var Count in Model.genderCount)
                {
                    <text>
                        genderLabels.push('@Count.label');
                        genderData.push('@Count.StudentCount');
                    </text>
                }
                var ctx = document.getElementById('genderChart').getContext('2d');
                var genderChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: genderLabels,
                        datasets: [{
                            label: 'Gender Distribution',
                            data: genderData,
                            backgroundColor: [
                                'rgba(54, 162, 235, 0.7)', // Blue for male
                                'rgba(255, 99, 132, 0.7)', // Pink for female
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        // Additional options as needed
                    }
                });
            </script>

        </td>
        <td>
            <canvas id="actionChart" width="400" height="300"></canvas>
            <script>
                var labels = [];
                var counts = [];

                @foreach (var Count in Model.activity30Count)
                {

                    <text>
                        labels.push('@Count.label');
                    counts.push('@Count.StudentCount');
                    </text>
                }
                                    var ctx = document.getElementById('actionChart').getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Number of Actions',
                            data: counts,
                            fill: false,
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 2
                        }]
                    },
                    options: {
                        scales: {
                            x: {
                                display: true,
                                title: {
                                    display: true,
                                    text: 'Date'
                                }
                            },
                            y: {
                                display: true,
                                title: {
                                    display: true,
                                    text: 'Number of Actions'
                                },
                                beginAtZero: true
                            }
                        }
                    }
                });
            </script>

        </td>
        <td>
            <canvas id="action15Chart" width="400" height="300"></canvas>
            <script>
                var labels = [];
                var counts = [];

                @foreach (var Count in Model.activity15minCount)
                {

                    <text>
                        labels.push('@Count.label');
                    counts.push('@Count.StudentCount');
                    </text>
                }
                                                    var ctx = document.getElementById('action15Chart').getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Number of Actions',
                            data: counts,
                            fill: false,
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 2
                        }]
                    },
                    options: {
                        scales: {
                            x: {
                                display: true,
                                title: {
                                    display: true,
                                    text: 'Interval'
                                }
                            },
                            y: {
                                display: true,
                                title: {
                                    display: true,
                                    text: 'Number of Actions'
                                },
                                beginAtZero: true
                            }
                        }
                    }
                });
            </script>
        </td>

        <td>
            <table style="margin-left:20px;">
                <tr>
                    <td class="std">
                        
                        <div style="padding:8px">
                             <h6 >Most Active Hours</h6>
                             @foreach (var hours in Model.mostactiveHours)
                             {
                                   <p> - @hours</p>                           
                             }
                        </div>
                         
                    </td>
                    <td class="std">

                        <div style="padding:8px">
                            <h6>Least Active Hours</h6>
                            @foreach (var hours in Model.leastactiveHours)
                            {
                                <p> - @hours</p>
                            }
                        </div>

                    </td >
                    <td class="std">

                        <div style="padding:8px">
                            <h6>Dead Hours</h6>
                            @foreach (var hours in Model.deadHours)
                            {
                                <p> - @hours</p>
                            }
                        </div>

                    </td>
                </tr>
            </table>
        </td>
    </tr>

</table>